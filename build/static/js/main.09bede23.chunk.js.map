{"version":3,"sources":["components/cards/Cards.module.css","components/cards/Card.js","components/cards/Cards.js","api/index.js","components/chart/Chart.js","components/countryPicker/CountryPicker.js","App.js","index.js","components/countryPicker/CountryPicker.module.css","App.module.css","components/cards/Card.module.css","components/chart/Chart.module.css","assets/covid19.png"],"names":["module","exports","Card","title","cases","date","subtitle","style","Grid","item","component","CardItem","xs","md","className","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Cards","data","confirmed","recovered","deaths","lastUpdate","container","spacing","justify","value","Date","toDateString","infected","url","fetchGlobalData","a","axios","get","console","log","fetchDailyData","modifiedData","map","total","reportDate","fetchCountriesNames","countries","name","fetchCountryData","country","Chart","useState","dailyData","setDailyData","getDailyData","covidDataApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","fontSize","fontColor","fontStyle","padding","useEffect","CountryPicker","handleCountryChange","setCountries","getCountriesNames","FormControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","setState","this","src","Img","logo","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09bede23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3RfB4\",\"infected\":\"Cards_infected__2LCJ6\",\"recovered\":\"Cards_recovered__RC-lg\",\"deaths\":\"Cards_deaths__2XIIP\"};","import React from \"react\";\nimport {\n  Card as CardItem,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Card.module.css\";\n\nconst Card = ({\n  title = \"\",\n  cases = 0,\n  date = \"\",\n  subtitle = \"\",\n  style = {},\n}) => {\n  return (\n    <Grid\n      item\n      component={CardItem}\n      xs={12}\n      md={3}\n      className={cx(styles.card, style)}\n    >\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"h5\">\n          <CountUp start={0} end={cases} duration={2.5} separator=\",\" />\n        </Typography>\n        <Typography color=\"textSecondary\">{date}</Typography>\n        <Typography variant=\"body2\">{subtitle}</Typography>\n      </CardContent>\n    </Grid>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport Card from \"./Card\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return <p>...Loading</p>;\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Card\n          title=\"Infected\"\n          cases={confirmed.value}\n          date={new Date(lastUpdate).toDateString()}\n          subtitle=\"Number of active cases of COVID-19\"\n          style={styles.infected}\n        />\n        <Card\n          title=\"Recovered\"\n          cases={recovered.value}\n          date={new Date(lastUpdate).toDateString()}\n          subtitle=\"Number of recoveries from COVID-19\"\n          style={styles.recovered}\n        />\n        <Card\n          title=\"Deaths\"\n          cases={deaths.value}\n          date={new Date(lastUpdate).toDateString()}\n          subtitle=\"Number of deaths caused by COVID-19\"\n          style={styles.deaths}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nconst fetchGlobalData = async () => {\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(url);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((item) => ({\n      confirmed: item.confirmed.total,\n      deaths: item.deaths.total,\n      date: item.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCountriesNames = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    const modifiedData = countries.map((item) => item.name);\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchCountryData = async (country) => {\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(`${url}/countries/${country}`);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  fetchGlobalData,\n  fetchDailyData,\n  fetchCountriesNames,\n  fetchCountryData,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport covidDataApi from \"../../api\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  const getDailyData = async () => {\n    const data = await covidDataApi.fetchDailyData();\n    setDailyData([...data]);\n  };\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current State in (${country})`,\n          fontSize: 24,\n          fontColor: \"#36d4c1\",\n          fontStyle: \"normal\",\n          padding: 30,\n        },\n      }}\n    />\n  ) : null;\n\n  useEffect(() => {\n    getDailyData();\n  }, []);\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport covidDataApi from \"../../api\";\nimport styles from \"./CountryPicker.module.css\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  const getCountriesNames = async () => {\n    setCountries(await covidDataApi.fetchCountriesNames());\n  };\n\n  useEffect(() => {\n    getCountriesNames();\n  }, []);\n\n  if (!countries) {\n    return <p>...Loading</p>;\n  }\n\n  return (\n    <div className={styles.container}>\n      <FormControl className={styles.container}>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"\">Global</option>\n          {countries.map((country) => (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\n\nimport Cards from \"./components/cards/Cards\";\nimport Chart from \"./components/chart/Chart\";\nimport CountryPicker from \"./components/countryPicker/CountryPicker\";\nimport styles from \"./App.module.css\";\nimport covidDataApi from \"./api\";\nimport Img from \"./assets/covid19.png\";\n\nclass App extends React.Component {\n  state = { data: {}, country: \"\" };\n\n  handleCountryChange = async (country = \"\") => {\n    let data = {};\n    if (!country) data = await covidDataApi.fetchGlobalData();\n    else data = await covidDataApi.fetchCountryData(country);\n    this.setState({ data, country });\n  };\n\n  async componentDidMount() {\n    const data = await covidDataApi.fetchGlobalData();\n    this.setState({ data });\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <img src={Img} className={styles.logo} alt=\"Covid-19 App Logo\" />\n        <Cards data={this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2qbCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1qeGs\",\"logo\":\"App_logo__2yywM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_M5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1P--R\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}